# Generated by Django 3.1.6 on 2021-03-03 13:51

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, default='images/profile_pictures/default.png', null=True, upload_to='images/profile_pictures', verbose_name='profile picture')),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='height (cm)')),
                ('weight', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='weight (kg)')),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date.today)])),
                ('activity_level', models.CharField(blank=True, choices=[('SD', 'Sedentary'), ('LA', 'Lightly Active'), ('MA', 'Moderately Active'), ('VA', 'Very Active'), ('EA', 'Extra Active')], help_text='\n        <ul>\n        <li>Sedentary - Little to no exercise.</li>\n        <li>Light Activity - Exercise 1 to 2 days a week.</li>\n        <li>Moderate Activity - Exercise 3 to 5 days a week.</li>\n        <li>High Activity - Exercise 6 to 7 days a week.</li>\n        <li>Very High Activity - Exercise 6 to 7 days a week, and a physical job.</li>\n        </ul>\n        ', max_length=2, null=True)),
                ('goal_weight', models.DecimalField(blank=True, decimal_places=1, help_text='Used to determine duration required to reach weight goal.', max_digits=4, null=True, verbose_name='goal weight (kg)')),
                ('goal', models.CharField(blank=True, choices=[('LW', 'Lose Fat'), ('MW', 'Maintain Weight'), ('GW', 'Build Muscle')], help_text='\n        <ul>\n        <li>Lose Fat.</li>\n        <li>Maintain Weight.</li>\n        <li>Gain Muscle.</li>\n        </ul>\n        ', max_length=2, null=True)),
                ('calculation_method', models.CharField(blank=True, choices=[('REC', 'Recommended'), ('PER', 'Percent'), ('GRA', 'Grams'), ('CUS', 'Custom')], editable=False, help_text="Calculation method used to set the user's macronutrient targets.", max_length=3, null=True)),
                ('energy', models.PositiveIntegerField(default=2000, verbose_name='energy (kcal)')),
                ('fat', models.DecimalField(decimal_places=1, default=70, max_digits=4, verbose_name='fat (g)')),
                ('saturates', models.DecimalField(decimal_places=1, default=20, max_digits=4, verbose_name='saturates (g)')),
                ('carbohydrate', models.DecimalField(decimal_places=1, default=260, max_digits=4, verbose_name='carbohydrate (g)')),
                ('sugars', models.DecimalField(decimal_places=1, default=90, max_digits=4, verbose_name='sugars (g)')),
                ('fibre', models.DecimalField(decimal_places=1, default=30, max_digits=4, verbose_name='fibre (g)')),
                ('protein', models.DecimalField(decimal_places=1, default=50, max_digits=4, verbose_name='protein (g)')),
                ('salt', models.DecimalField(decimal_places=2, default=6, max_digits=5, verbose_name='salt (g)')),
                ('protein_pct', models.PositiveIntegerField(blank=True, help_text='\n        Percentage of daily calories from protein.\n        ', null=True, verbose_name='protein percent')),
                ('carbohydrate_pct', models.PositiveIntegerField(blank=True, help_text='\n        Percentage of daily calories from carbohydrates.\n        ', null=True, verbose_name='carbohydrate percent')),
                ('fat_pct', models.PositiveIntegerField(blank=True, help_text='\n        Percentage of daily calories from fat.\n        ', null=True, verbose_name='fat percent')),
                ('calories_per_kg', models.PositiveIntegerField(blank=True, help_text='The amount of calories (kcal) per kilogram of body weight.', null=True)),
                ('protein_per_kg', models.DecimalField(blank=True, decimal_places=2, help_text='The amount of protein (in grams) per kilogram of body weight.', max_digits=4, null=True)),
                ('carbohydrate_per_kg', models.DecimalField(blank=True, decimal_places=2, help_text='The amount of carbohydrates (in grams) per kilogram of body weight.', max_digits=4, null=True)),
                ('fat_per_kg', models.DecimalField(blank=True, decimal_places=2, help_text='The amount of fat (in grams) per kilogram of body weight.', max_digits=4, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
